import 'dart:convert';
import 'package:flutter/material.dart';
import 'dart:math';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  List<dynamic> _movies = [];

  @override
  void initState() {
    super.initState();
    // JSON string representing the movie titles
    String jsonMovies = '''
      {
        "movies": [
          "Movie 1",
          "Movie 2",
          "Movie 3",
          "Movie 4",
          "Movie 5",
          "Movie 6",
          "Movie 7",
          "Movie 8",
          "Movie 9",
          "Movie 10",
          "Movie 11",
          "Movie 12",
          "Movie 13",
          "Movie 14",
          "Movie 15",
          "Movie 16",
          "Movie 17",
          "Movie 18",
          "Movie 19",
          "Movie 20"
        ]
      }
    ''';

    // Parse the JSON string
    Map<String, dynamic> movieData = json.decode(jsonMovies);

    // Extract the movie titles
    _movies = List<dynamic>.from(movieData['movies']);
  }

  List<dynamic> _generateRandomMovies() {
    var random = new Random();
    return List.generate(3, (index) => _movies[random.nextInt(_movies.length)]);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text("Jay's movie app"),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Container(
                width: 350,
                height: 350,
                color: Colors.red,
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text(
                      "Jay's Movie selection",
                      style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                    ),
                    SizedBox(height: 16),
                    Column(
                      children: _generateRandomMovies().map((movie) {
                        return Text(
                          movie,
                          style: TextStyle(fontSize: 18),
                        );
                      }).toList(),
                    ),
                  ],
                ),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  setState(() {
                    _movies.shuffle();
                  });
                },
                child: Text(
                  'Generate New Movies',
                  style: TextStyle(fontSize: 18),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}


class Quotes {
  final String author;
  final String quote;
  Quotes({ required this.author, required this.quote});

 factory Quotes.fromJson(Map<String, dynamic> json) {
   return Quotes(
    author: json["author"],
    quote: json["quote"]
    );
  }
}

Future<Quotes> getQuotesFromApi() async {
  var response = await http.get(Uri.parse(https://api.themotivate365.com/stoic-quote));
  return Quotes.fromJson(response.body);
}






//

ElevatedButton is a widget that displays a button that's elevated above the rest of the content on the screen.

onPressed is a callback function that's called when the button is pressed. In this case, 
we're defining an anonymous function that calls the setState method to update the widget's state with new movie suggestions.

setState is a method that's inherited from the StatefulWidget class. It's used to update the widget's state and re-render the widget tree with the new state. 
In this case, we're calling setState with an anonymous function that shuffles the _movies list using the shuffle method, which randomizes the order of the elementsin the list.
So, when the user presses the "Generate New Movies" button, the onPressed callback is called, 
which shuffles the _movies list and updates the widget's state using setState. This causes the build method to be called again with the new _movies list, 
resulting in a new set of movie suggestions being displayed on the screen.

//
initState() is a method that's called when the stateful widget is inserted into the widget tree for the first time. 
It's used to initialize the widget's state and perform any other setup that's required.

In the code you provided, initState() is being overridden in the _MyAppState class to perform some initial setup for the app. 
The super.initState() call invokes the initState() method of the parent class, which is required to ensure that the parent class initializes its state properly.

After the super.initState() call, the code in initState() initializes the _movies list by parsing a JSON string that's defined in the code. 
This list of movies will be used to generate a random selection of movies when the app starts.

So, super.initState() simply ensures that the parent class's initState() method is called, while the rest of the code in initState() sets up the widget's initial state.
